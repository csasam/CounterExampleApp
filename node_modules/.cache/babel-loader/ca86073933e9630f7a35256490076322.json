{"ast":null,"code":"import _objectSpread from \"/Users/christian/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/christian/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/christian/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christian/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christian/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christian/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christian/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christian/Desktop/React/counter-app/src/components/counters.jsx\";\n//component to call multiple counter components\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nvar Counters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counters, _Component);\n\n  function Counters() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counters);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counters)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }]\n    };\n\n    _this.handleIncrement = function (counter) {\n      //console.log(\"1st counter\", counter);\n      var counters = _toConsumableArray(_this.state.counters);\n\n      var index = counters.indexOf(counter); //create a clone of counter array so you don't edit state counters.  gets index of what is being clicked.\n\n      counters[index] = _objectSpread({}, counter);\n      counters[index].value++;\n      console.log(_this.state.counters[index]);\n\n      _this.setState({\n        counters: counters\n      });\n    };\n\n    _this.handleReset = function () {\n      //call a new array and reset to zero using arrow function and map function, then return\n      var counters = _this.state.counters.map(function (c) {\n        c.value = 0;\n        return c;\n      });\n\n      console.log(\"Handler Reset\", counters);\n\n      _this.setState({\n        counters: counters\n      });\n    };\n\n    _this.handleDelete = function (counterId) {\n      console.log(\"Handler Delete\", counterId); //list comprehension to use filter method that only shows items that was not clicked.\n\n      var counters = _this.state.counters.filter(function (c) {\n        return c.id !== counterId;\n      });\n\n      _this.setState({\n        counters: counters\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counters, [{\n    key: \"render\",\n    //button.btn.btn-primary.btn-small.m-2\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleReset,\n        className: \"btn btn-primary btn-small m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Reset\"), this.state.counters.map(function (counter) {\n        return (//passing event handler to onDelete from Counter to modify state values in this component\n          React.createElement(Counter //key is used as general syntax in react that an array should have a unique key prop\n          , {\n            key: counter.id //event property to delete calling method handleDelete\n            ,\n            onDelete: _this2.handleDelete,\n            onIncrement: _this2.handleIncrement,\n            counter: counter //passing all the data about the counter object instead of calling individual attributes.\n            //value={counter.value}\n            //id={counter.id}\n            ,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          })\n        );\n      }));\n    }\n  }]);\n\n  return Counters;\n}(Component);\n\nexport default Counters;","map":{"version":3,"sources":["/Users/christian/Desktop/React/counter-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleIncrement","counter","index","indexOf","console","log","setState","handleReset","map","c","handleDelete","counterId","filter"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,CAAC;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAAD,EAAsB;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAAtB,EAA2C;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAA3C;AADJ,K;;UAGRC,e,GAAkB,UAAAC,OAAO,EAAI;AAC3B;AACA,UAAMJ,QAAQ,sBAAO,MAAKD,KAAL,CAAWC,QAAlB,CAAd;;AACA,UAAMK,KAAK,GAAGL,QAAQ,CAACM,OAAT,CAAiBF,OAAjB,CAAd,CAH2B,CAI3B;;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,qBAAuBD,OAAvB;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,CAAgBH,KAAhB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKT,KAAL,CAAWC,QAAX,CAAoBK,KAApB,CAAZ;;AACA,YAAKI,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACD,K;;UACDU,W,GAAc,YAAM;AAClB;AACA,UAAMV,QAAQ,GAAG,MAAKD,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAwB,UAAAC,CAAC,EAAI;AAC5CA,QAAAA,CAAC,CAACV,KAAF,GAAU,CAAV;AACA,eAAOU,CAAP;AACD,OAHgB,CAAjB;;AAIAL,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,QAA7B;;AACA,YAAKS,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACD,K;;UACDa,Y,GAAe,UAAAC,SAAS,EAAI;AAC1BP,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BM,SAA9B,EAD0B,CAE1B;;AACA,UAAMd,QAAQ,GAAG,MAAKD,KAAL,CAAWC,QAAX,CAAoBe,MAApB,CAA2B,UAAAH,CAAC;AAAA,eAAIA,CAAC,CAACX,EAAF,KAASa,SAAb;AAAA,OAA5B,CAAjB;;AACA,YAAKL,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACD,K;;;;;;;AACD;6BACS;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAE,KAAKU,WADhB;AAEE,QAAA,SAAS,EAAC,+BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAOG,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAwB,UAAAP,OAAO;AAAA,eAC9B;AACA,8BAAC,OAAD,CACE;AADF;AAEE,YAAA,GAAG,EAAEA,OAAO,CAACH,EAFf,CAGE;AAHF;AAIE,YAAA,QAAQ,EAAE,MAAI,CAACY,YAJjB;AAKE,YAAA,WAAW,EAAE,MAAI,CAACV,eALpB;AAME,YAAA,OAAO,EAAEC,OANX,CAMoB;AAClB;AACA;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAF8B;AAAA,OAA/B,CAPH,CADF;AAuBD;;;;EAtDoBR,S;;AAyDvB,eAAeE,QAAf","sourcesContent":["//component to call multiple counter components\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  state = {\n    counters: [{ id: 1, value: 4 }, { id: 2, value: 0 }, { id: 3, value: 0 }]\n  };\n  handleIncrement = counter => {\n    //console.log(\"1st counter\", counter);\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    //create a clone of counter array so you don't edit state counters.  gets index of what is being clicked.\n    counters[index] = { ...counter };\n    counters[index].value++;\n    console.log(this.state.counters[index]);\n    this.setState({ counters });\n  };\n  handleReset = () => {\n    //call a new array and reset to zero using arrow function and map function, then return\n    const counters = this.state.counters.map(c => {\n      c.value = 0;\n      return c;\n    });\n    console.log(\"Handler Reset\", counters);\n    this.setState({ counters });\n  };\n  handleDelete = counterId => {\n    console.log(\"Handler Delete\", counterId);\n    //list comprehension to use filter method that only shows items that was not clicked.\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({ counters });\n  };\n  //button.btn.btn-primary.btn-small.m-2\n  render() {\n    return (\n      <div>\n        <button\n          onClick={this.handleReset}\n          className=\"btn btn-primary btn-small m-2\"\n        >\n          Reset\n        </button>\n        {this.state.counters.map(counter => (\n          //passing event handler to onDelete from Counter to modify state values in this component\n          <Counter\n            //key is used as general syntax in react that an array should have a unique key prop\n            key={counter.id}\n            //event property to delete calling method handleDelete\n            onDelete={this.handleDelete}\n            onIncrement={this.handleIncrement}\n            counter={counter} //passing all the data about the counter object instead of calling individual attributes.\n            //value={counter.value}\n            //id={counter.id}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}