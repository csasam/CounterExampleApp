{"ast":null,"code":"import _classCallCheck from \"/Users/christian/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christian/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christian/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christian/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christian/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christian/Desktop/React/counter-app/src/components/counters.jsx\";\n//component to call multiple counter components\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nvar Counters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counters, _Component);\n\n  function Counters() {\n    _classCallCheck(this, Counters);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Counters).apply(this, arguments));\n  }\n\n  _createClass(Counters, [{\n    key: \"render\",\n    //button.btn.btn-primary.btn-small.m-2\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.props.onReset,\n        className: \"btn btn-primary btn-small m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \"Reset\"), this.state.counters.map(function (counter) {\n        return (//passing event handler to onDelete from Counter to modify state values in this component\n          React.createElement(Counter //key is used as general syntax in react that an array should have a unique key prop\n          , {\n            key: counter.cs //event property to delete calling method handleDelete\n            ,\n            onDelete: _this.props.onDelete,\n            onIncrement: _this.props.onIncrement,\n            counter: counter //passing all the data about the counter object instead of calling individual attributes.\n            //value={counter.value}\n            //id={counter.id}\n            ,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          })\n        );\n      }));\n    }\n  }]);\n\n  return Counters;\n}(Component);\n\nexport default Counters;","map":{"version":3,"sources":["/Users/christian/Desktop/React/counter-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","props","onReset","state","counters","map","counter","cs","onDelete","onIncrement"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,Q;;;;;;;;;;;;;AACJ;6BACS;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OADtB;AAEE,QAAA,SAAS,EAAC,+BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAOG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,UAAAC,OAAO;AAAA,eAC9B;AACA,8BAAC,OAAD,CACE;AADF;AAEE,YAAA,GAAG,EAAEA,OAAO,CAACC,EAFf,CAGE;AAHF;AAIE,YAAA,QAAQ,EAAE,KAAI,CAACN,KAAL,CAAWO,QAJvB;AAKE,YAAA,WAAW,EAAE,KAAI,CAACP,KAAL,CAAWQ,WAL1B;AAME,YAAA,OAAO,EAAEH,OANX,CAMoB;AAClB;AACA;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAF8B;AAAA,OAA/B,CAPH,CADF;AAuBD;;;;EA1BoBR,S;;AA6BvB,eAAeE,QAAf","sourcesContent":["//component to call multiple counter components\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  //button.btn.btn-primary.btn-small.m-2\n  render() {\n    return (\n      <div>\n        <button\n          onClick={this.props.onReset}\n          className=\"btn btn-primary btn-small m-2\"\n        >\n          Reset\n        </button>\n        {this.state.counters.map(counter => (\n          //passing event handler to onDelete from Counter to modify state values in this component\n          <Counter\n            //key is used as general syntax in react that an array should have a unique key prop\n            key={counter.cs}\n            //event property to delete calling method handleDelete\n            onDelete={this.props.onDelete}\n            onIncrement={this.props.onIncrement}\n            counter={counter} //passing all the data about the counter object instead of calling individual attributes.\n            //value={counter.value}\n            //id={counter.id}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}